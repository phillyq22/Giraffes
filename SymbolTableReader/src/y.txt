_IO_FILE
  FIELD: int, _flags STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: char *, _IO_read_ptr STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_read_end STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_read_base STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_write_base STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_write_ptr STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_write_end STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_buf_base STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_buf_end STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_save_base STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_backup_base STARTING WORD: 80 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, _IO_save_end STARTING WORD: 88 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class _IO_marker *, _markers STARTING WORD: 96 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class _IO_FILE *, _chain STARTING WORD: 104 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, _fileno STARTING WORD: 112 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, _flags2 STARTING WORD: 116 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: __off_t, _old_offset STARTING WORD: 120 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: short unsigned int, _cur_column STARTING WORD: 128 BIT SIZE: 16 BYTE SIZE: 2
  FIELD: signed char, _vtable_offset STARTING WORD: 130 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, _shortbuf[1] STARTING WORD: 131 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: _IO_lock_t *, _lock STARTING WORD: 136 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: __off64_t, _offset STARTING WORD: 144 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, __pad1 STARTING WORD: 152 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, __pad2 STARTING WORD: 160 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, __pad3 STARTING WORD: 168 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, __pad4 STARTING WORD: 176 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: size_t, __pad5 STARTING WORD: 184 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, _mode STARTING WORD: 192 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: char, _unused2[20] STARTING WORD: 196 BIT SIZE: 160 BYTE SIZE: 20
typedef
  FIELD: unsigned int, gp_offset STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: unsigned int, fp_offset STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: void *, overflow_arg_area STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, reg_save_area STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
tm
  FIELD: int, tm_sec STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_min STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_hour STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_mday STARTING WORD: 12 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_mon STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_year STARTING WORD: 20 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_wday STARTING WORD: 24 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_yday STARTING WORD: 28 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, tm_isdst STARTING WORD: 32 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: long int, tm_gmtoff STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: const char *, tm_zone STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
lconv
  FIELD: char *, decimal_point STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, thousands_sep STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, grouping STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, int_curr_symbol STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, currency_symbol STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, mon_decimal_point STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, mon_thousands_sep STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, mon_grouping STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, positive_sign STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char *, negative_sign STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: char, int_frac_digits STARTING WORD: 80 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, frac_digits STARTING WORD: 81 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, p_cs_precedes STARTING WORD: 82 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, p_sep_by_space STARTING WORD: 83 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, n_cs_precedes STARTING WORD: 84 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, n_sep_by_space STARTING WORD: 85 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, p_sign_posn STARTING WORD: 86 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, n_sign_posn STARTING WORD: 87 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, int_p_cs_precedes STARTING WORD: 88 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, int_p_sep_by_space STARTING WORD: 89 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, int_n_cs_precedes STARTING WORD: 90 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, int_n_sep_by_space STARTING WORD: 91 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, int_p_sign_posn STARTING WORD: 92 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: char, int_n_sign_posn STARTING WORD: 93 BIT SIZE: 8 BYTE SIZE: 1
_IO_marker
  FIELD: class _IO_marker *, _next STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class _IO_FILE *, _sbuf STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, _pos STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
maxiOsc
  FIELD: double, frequency STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, phase STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, startphase STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, endphase STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, tri STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
__pthread_internal_list
  FIELD: class __pthread_internal_list *, __prev STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class __pthread_internal_list *, __next STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
maxiSettings
  FIELD: int, sampleRate STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, channels STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, bufferSize STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
maxiEnvelope
  FIELD: double, period STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, phase STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, startVal STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, endVal STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, currentval STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, nextval STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, noteOn STARTING WORD: 56 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, releaseMode STARTING WORD: 57 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, decayMode STARTING WORD: 58 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, sustainMode STARTING WORD: 59 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, attackMode STARTING WORD: 60 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: int, isPlaying STARTING WORD: 64 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, trig STARTING WORD: 68 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, valindex STARTING WORD: 72 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: double, amplitude STARTING WORD: 80 BIT SIZE: 64 BYTE SIZE: 8
maxiDelayline
  FIELD: double, frequency STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, phase STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: double, startphase STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, endphase STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, memory[88200] STARTING WORD: 40 BIT SIZE: 5644800 BYTE SIZE: 705600
maxiFractionalDelay
  FIELD: intconst, delaySize STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: double, memory[88200] STARTING WORD: 0 BIT SIZE: 5644800 BYTE SIZE: 705600
  FIELD: int, writePointer STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, readPointer STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
maxiFilter
  FIELD: double, gain STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, input STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, inputs[10] STARTING WORD: 24 BIT SIZE: 640 BYTE SIZE: 80
  FIELD: double, outputs[10] STARTING WORD: 104 BIT SIZE: 640 BYTE SIZE: 80
  FIELD: double, cutoff1 STARTING WORD: 184 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, x STARTING WORD: 192 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, y STARTING WORD: 200 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, z STARTING WORD: 208 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, c STARTING WORD: 216 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, cutoff STARTING WORD: 224 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, resonance STARTING WORD: 232 BIT SIZE: 64 BYTE SIZE: 8
maxiMix
  FIELD: double, input STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, two[2] STARTING WORD: 8 BIT SIZE: 128 BYTE SIZE: 16
  FIELD: double, four[4] STARTING WORD: 24 BIT SIZE: 256 BYTE SIZE: 32
  FIELD: double, eight[8] STARTING WORD: 56 BIT SIZE: 512 BYTE SIZE: 64
  FIELD: double, x STARTING WORD: 120 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, y STARTING WORD: 128 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, z STARTING WORD: 136 BIT SIZE: 64 BYTE SIZE: 8
maxiLagExp<double>
  FIELD: double, alpha STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, alphaReciprocal STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, val STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
maxiSample
  FIELD: string, myPath STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, myChunkSize STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, mySubChunk1Size STARTING WORD: 12 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, readChannel STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: short int, myFormat STARTING WORD: 20 BIT SIZE: 16 BYTE SIZE: 2
  FIELD: int, myByteRate STARTING WORD: 24 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: short int, myBlockAlign STARTING WORD: 28 BIT SIZE: 16 BYTE SIZE: 2
  FIELD: double, position STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, recordPosition STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, speed STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class maxiLagExp<double>, loopRecordLag STARTING WORD: 64 BIT SIZE: 192 BYTE SIZE: 24
  FIELD: int, myDataSize STARTING WORD: 88 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: short int, myChannels STARTING WORD: 92 BIT SIZE: 16 BYTE SIZE: 2
  FIELD: int, mySampleRate STARTING WORD: 96 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: long int, length STARTING WORD: 104 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: short int, myBitsPerSample STARTING WORD: 112 BIT SIZE: 16 BYTE SIZE: 2
  FIELD: short int *, temp STARTING WORD: 120 BIT SIZE: 64 BYTE SIZE: 8
maxiMap
maxiDyn
  FIELD: double, input STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, ratio STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, currentRatio STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, threshold STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, attack STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, release STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, amplitude STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: long int, holdtime STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: long int, holdcount STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, attackphase STARTING WORD: 80 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, holdphase STARTING WORD: 84 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, releasephase STARTING WORD: 88 BIT SIZE: 32 BYTE SIZE: 4
maxiEnv
  FIELD: double, input STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, attack STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, decay STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, sustain STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, release STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, amplitude STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, trigger STARTING WORD: 56 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: long int, holdtime STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: long int, holdcount STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, attackphase STARTING WORD: 80 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, decayphase STARTING WORD: 84 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, sustainphase STARTING WORD: 88 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, holdphase STARTING WORD: 92 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, releasephase STARTING WORD: 96 BIT SIZE: 32 BYTE SIZE: 4
convert
maxiDistortion
maxiEnvelopeFollowerType<double>
  FIELD: double, attack STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, release STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, env STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
maxiSVF
  FIELD: double, v0z STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, v1 STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, v2 STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, g STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, damping STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, k STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, ginv STARTING WORD: 48 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, g1 STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, g2 STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, g3 STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, g4 STARTING WORD: 80 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, freq STARTING WORD: 88 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, res STARTING WORD: 96 BIT SIZE: 64 BYTE SIZE: 8
maxiKick
  FIELD: double, pitch STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, outputD STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, envOut STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, useDistortion STARTING WORD: 32 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useLimiter STARTING WORD: 33 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useFilter STARTING WORD: 34 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, distortion STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, inverse STARTING WORD: 48 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, cutoff STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, resonance STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, gain STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class maxiOsc, kick STARTING WORD: 80 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiEnv, envelope STARTING WORD: 128 BIT SIZE: 832 BYTE SIZE: 104
  FIELD: class maxiDistortion, distort STARTING WORD: 232 BIT SIZE: 0 BYTE SIZE: 0
  FIELD: class maxiFilter, filter STARTING WORD: 240 BIT SIZE: 1920 BYTE SIZE: 240
maxiSnare
  FIELD: double, pitch STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, outputD STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, envOut STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, useDistortion STARTING WORD: 32 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useLimiter STARTING WORD: 33 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useFilter STARTING WORD: 34 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, distortion STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, inverse STARTING WORD: 48 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, cutoff STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, resonance STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, gain STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class maxiOsc, tone STARTING WORD: 80 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiOsc, noise STARTING WORD: 128 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiEnv, envelope STARTING WORD: 176 BIT SIZE: 832 BYTE SIZE: 104
  FIELD: class maxiDistortion, distort STARTING WORD: 280 BIT SIZE: 0 BYTE SIZE: 0
  FIELD: class maxiFilter, filter STARTING WORD: 288 BIT SIZE: 1920 BYTE SIZE: 240
maxiHats
  FIELD: double, pitch STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, output STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, outputD STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, envOut STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, useDistortion STARTING WORD: 32 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useLimiter STARTING WORD: 33 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useFilter STARTING WORD: 34 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, distortion STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, inverse STARTING WORD: 48 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, cutoff STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, resonance STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, gain STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class maxiOsc, tone STARTING WORD: 80 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiOsc, noise STARTING WORD: 128 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiEnv, envelope STARTING WORD: 176 BIT SIZE: 832 BYTE SIZE: 104
  FIELD: class maxiDistortion, distort STARTING WORD: 280 BIT SIZE: 0 BYTE SIZE: 0
  FIELD: class maxiSVF, filter STARTING WORD: 288 BIT SIZE: 832 BYTE SIZE: 104
maxiSampler
  FIELD: double, position STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, pitch[32] STARTING WORD: 8 BIT SIZE: 2048 BYTE SIZE: 256
  FIELD: int, originalPitch STARTING WORD: 264 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: double, outputs[32] STARTING WORD: 272 BIT SIZE: 2048 BYTE SIZE: 256
  FIELD: double, outputD STARTING WORD: 528 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, envOut[32] STARTING WORD: 536 BIT SIZE: 2048 BYTE SIZE: 256
  FIELD: double, envOutGain[32] STARTING WORD: 792 BIT SIZE: 2048 BYTE SIZE: 256
  FIELD: double, output STARTING WORD: 1048 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, useDistortion STARTING WORD: 1056 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useLimiter STARTING WORD: 1057 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: bool, useFilter STARTING WORD: 1058 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, distortion STARTING WORD: 1064 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, inverse STARTING WORD: 1072 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: double, cutoff STARTING WORD: 1080 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, resonance STARTING WORD: 1088 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, gain STARTING WORD: 1096 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, voices STARTING WORD: 1104 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, currentVoice STARTING WORD: 1108 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: class convert, mtof STARTING WORD: 1112 BIT SIZE: 0 BYTE SIZE: 0
  FIELD: class maxiOsc, LFO1 STARTING WORD: 1120 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiOsc, LFO2 STARTING WORD: 1168 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiOsc, LFO3 STARTING WORD: 1216 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiOsc, LFO4 STARTING WORD: 1264 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: class maxiSample, samples[32] STARTING WORD: 1312 BIT SIZE: 32768 BYTE SIZE: 4096
  FIELD: class maxiEnv, envelopes[32] STARTING WORD: 5408 BIT SIZE: 26624 BYTE SIZE: 3328
  FIELD: class maxiDistortion, distort STARTING WORD: 8736 BIT SIZE: 0 BYTE SIZE: 0
  FIELD: class maxiSVF, filters[32] STARTING WORD: 8744 BIT SIZE: 26624 BYTE SIZE: 3328
  FIELD: bool, sustain STARTING WORD: 12072 BIT SIZE: 8 BYTE SIZE: 1
maxiClock
  FIELD: class maxiOsc, timer STARTING WORD: 0 BIT SIZE: 384 BYTE SIZE: 48
  FIELD: int, currentCount STARTING WORD: 48 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, lastCount STARTING WORD: 52 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: int, playHead STARTING WORD: 56 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: double, bps STARTING WORD: 64 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: double, bpm STARTING WORD: 72 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: int, ticks STARTING WORD: 80 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: bool, tick STARTING WORD: 84 BIT SIZE: 8 BYTE SIZE: 1
maxiRecorder
  FIELD: bool, threadRunning STARTING WORD: 0 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: intconst, bufferQueueSize STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: intconst, bufferSize STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: long int, bufferIndex STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: long int, recordedAmountFrames STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: class queue<double*, std::deque<double*, std::allocator<double*> > >, bufferQueue STARTING WORD: 32 BIT SIZE: 640 BYTE SIZE: 80
  FIELD: class queue<double*, std::deque<double*, std::allocator<double*> > >, savedBuffers STARTING WORD: 112 BIT SIZE: 640 BYTE SIZE: 80
  FIELD: bool, doRecord STARTING WORD: 192 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: string, filename STARTING WORD: 200 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: pthread_t, daemon STARTING WORD: 208 BIT SIZE: 64 BYTE SIZE: 8
maxiLagExp<float>
  FIELD: float, alpha STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: float, alphaReciprocal STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: float, val STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
RtError
  FIELD: string, message_ STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: enum Type, type_ STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
  Type
    FIELD: int, WARNING STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, DEBUG_WARNING STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, UNSPECIFIED STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, NO_DEVICES_FOUND STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, INVALID_DEVICE STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, MEMORY_ERROR STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, INVALID_PARAMETER STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, INVALID_USE STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, DRIVER_ERROR STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, SYSTEM_ERROR STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, THREAD_ERROR STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
RtAudio
  FIELD: class RtApi *, rtapi_ STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  Api
    FIELD: int, UNSPECIFIED STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, LINUX_ALSA STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, LINUX_OSS STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, UNIX_JACK STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, MACOSX_CORE STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, WINDOWS_ASIO STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, WINDOWS_DS STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, RTAUDIO_DUMMY STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
  DeviceInfo
    FIELD: bool, probed STARTING WORD: 0 BIT SIZE: 8 BYTE SIZE: 1
    FIELD: string, name STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: unsigned int, outputChannels STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, inputChannels STARTING WORD: 20 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, duplexChannels STARTING WORD: 24 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: bool, isDefaultOutput STARTING WORD: 28 BIT SIZE: 8 BYTE SIZE: 1
    FIELD: bool, isDefaultInput STARTING WORD: 29 BIT SIZE: 8 BYTE SIZE: 1
    FIELD: class vector<unsigned int, std::allocator<unsigned int> >, sampleRates STARTING WORD: 32 BIT SIZE: 192 BYTE SIZE: 24
    FIELD: RtAudioFormat, nativeFormats STARTING WORD: 56 BIT SIZE: 64 BYTE SIZE: 8
  StreamParameters
    FIELD: unsigned int, deviceId STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, nChannels STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, firstChannel STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
  StreamOptions
    FIELD: RtAudioStreamFlags, flags STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, numberOfBuffers STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: string, streamName STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: int, priority STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
RtApi
  FIELD: int ()(void) * *, _vptr.RtApi STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: unsigned intconst, MAX_SAMPLE_RATES STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: unsigned intconst, SAMPLE_RATES STARTING WORD: 0 BIT SIZE: 448 BYTE SIZE: 56
  FIELD: ostringstream, errorStream_ STARTING WORD: 8 BIT SIZE: 0 BYTE SIZE: 0
  FIELD: string, errorText_ STARTING WORD: 360 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, showWarnings_ STARTING WORD: 368 BIT SIZE: 8 BYTE SIZE: 1
  FIELD: struct RtApiStream, stream_ STARTING WORD: 376 BIT SIZE: 2880 BYTE SIZE: 360
  {
    FIELD: int, FAILURE STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, SUCCESS STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
  StreamState
    FIELD: int, STREAM_STOPPED STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, STREAM_RUNNING STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, STREAM_CLOSED STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
  StreamMode
    FIELD: int, OUTPUT STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, INPUT STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, DUPLEX STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
    FIELD: int, UNINITIALIZED STARTING WORD: null BIT SIZE: 0 BYTE SIZE: 0
  ConvertInfo
    FIELD: int, channels STARTING WORD: 0 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: int, inJump STARTING WORD: 4 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: int, outJump STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: RtAudioFormat, inFormat STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: RtAudioFormat, outFormat STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: class vector<int, std::allocator<int> >, inOffset STARTING WORD: 32 BIT SIZE: 192 BYTE SIZE: 24
    FIELD: class vector<int, std::allocator<int> >, outOffset STARTING WORD: 56 BIT SIZE: 192 BYTE SIZE: 24
  RtApiStream
    FIELD: unsigned int, device[2] STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: void *, apiHandle STARTING WORD: 8 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: enum StreamMode, mode STARTING WORD: 16 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: enum StreamState, state STARTING WORD: 20 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: char *, userBuffer[2] STARTING WORD: 24 BIT SIZE: 128 BYTE SIZE: 16
    FIELD: char *, deviceBuffer STARTING WORD: 40 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: bool, doConvertBuffer[2] STARTING WORD: 48 BIT SIZE: 16 BYTE SIZE: 2
    FIELD: bool, userInterleaved STARTING WORD: 50 BIT SIZE: 8 BYTE SIZE: 1
    FIELD: bool, deviceInterleaved[2] STARTING WORD: 51 BIT SIZE: 16 BYTE SIZE: 2
    FIELD: bool, doByteSwap[2] STARTING WORD: 53 BIT SIZE: 16 BYTE SIZE: 2
    FIELD: unsigned int, sampleRate STARTING WORD: 56 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, bufferSize STARTING WORD: 60 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, nBuffers STARTING WORD: 64 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: unsigned int, nUserChannels[2] STARTING WORD: 68 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: unsigned int, nDeviceChannels[2] STARTING WORD: 76 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: unsigned int, channelOffset[2] STARTING WORD: 84 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: long unsigned int, latency[2] STARTING WORD: 96 BIT SIZE: 128 BYTE SIZE: 16
    FIELD: RtAudioFormat, userFormat STARTING WORD: 112 BIT SIZE: 64 BYTE SIZE: 8
    FIELD: long unsigned int, deviceFormat[2] STARTING WORD: 120 BIT SIZE: 128 BYTE SIZE: 16
    FIELD: StreamMutex, mutex STARTING WORD: 136 BIT SIZE: 32 BYTE SIZE: 4
    FIELD: struct CallbackInfo, callbackInfo STARTING WORD: 144 BIT SIZE: 384 BYTE SIZE: 48
    FIELD: struct ConvertInfo, convertInfo[2] STARTING WORD: 192 BIT SIZE: 1280 BYTE SIZE: 160
    FIELD: double, streamTime STARTING WORD: 352 BIT SIZE: 64 BYTE SIZE: 8
CallbackInfo
  FIELD: void *, object STARTING WORD: 0 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: ThreadHandle, thread STARTING WORD: 8 BIT SIZE: 32 BYTE SIZE: 4
  FIELD: void *, callback STARTING WORD: 16 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, userData STARTING WORD: 24 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: void *, apiInfo STARTING WORD: 32 BIT SIZE: 64 BYTE SIZE: 8
  FIELD: bool, isRunning STARTING WORD: 40 BIT SIZE: 8 BYTE SIZE: 1
RtApiDummy
